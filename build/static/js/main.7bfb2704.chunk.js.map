{"version":3,"sources":["NavBar.jsx","Product.jsx","ShoppingCart.jsx","NoMatchPage.jsx","App.jsx","index.js"],"names":["NavBar","Fragment","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Component","Product","props","state","product","this","onClick","onDelete","productName","price","quantity","onIncrement","onDecrement","children","ShoppingCart","componentDidMount","a","fetch","method","response","json","prods","console","log","setState","products","handleIncrement","maxValue","allProducts","index","indexOf","handleDecrement","minValue","handleDelete","window","confirm","splice","map","prod","key","prevProps","prevState","error","info","localStorage","lastError","JSON","stringify","NoMatchPage","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bfb2704.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navbar-style\">\n          <a className=\"navbar-brand\" href=\"/#\">\n            eCommerce\n          </a>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              {/* <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  Login\n                </Link>\n              </li> */}\n\n              {/* <li className=\"nav-item\">\n                <Link to=\"/dashboard\" className=\"nav-link\">\n                  Dashboard\n                </Link>\n              </li> */}\n\n              {/* <li className=\"nav-item\">\n                <Link to=\"/customers\" className=\"nav-link\">\n                  Customers\n                </Link>\n              </li> */}\n\n              <li className=\"nav-item\">\n                <Link to=\"/cart\" className=\"nav-link\">\n                  Shopping Cart\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nexport default class Product extends Component {\n  constructor(props) {\n    super(props);\n\n    //console.log(\"Constructor - Product\");\n\n    this.state = {\n      product: this.props.product,\n    };\n  }\n\n  render() {\n    //console.log(this.props);\n\n    //console.log(\"render - Product\");\n\n    return (\n      <div className=\"col-lg-6\">\n        <div className=\"card m-2\">\n          <div className=\"card-body\">\n            <div className=\"text-muted\">\n              # {this.state.product.id}\n              {/* delete button starts */}\n              <span\n                className=\"pull-right hand-icon\"\n                onClick={() => {\n                  this.props.onDelete(this.state.product);\n                }}\n              >\n                <i className=\"fa fa-times\"></i>\n              </span>\n              {/* delete button ends */}\n            </div>\n\n            <h5 className=\"pt-2 border-top\">\n              {this.state.product.productName}\n            </h5>\n\n            <div>$ {this.state.product.price}</div>\n          </div>\n          {/* card body ends here */}\n\n          <div className=\"card-footer\">\n            <div className=\"float-left\">\n              <span className=\"badge\">{this.state.product.quantity}</span>\n\n              <div className=\"btn-group\">\n                <button\n                  className=\"btn btn-outline-success\"\n                  onClick={() => {\n                    this.props.onIncrement(this.state.product, 10);\n                  }}\n                >\n                  +\n                </button>\n\n                <button\n                  className=\"btn btn-outline-success\"\n                  onClick={() => {\n                    this.props.onDecrement(this.state.product, 0);\n                  }}\n                >\n                  -\n                </button>\n              </div>\n            </div>\n            {/* float-left ends here */}\n\n            <div className=\"float-right\">{this.props.children}</div>\n          </div>\n          {/* card-footer ends here */}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    //console.log(\"componentDidMount - Product\");\n  }\n\n  componentDidUpdate() {\n    //console.log(\"componentDidUpdate - Product\");\n  }\n\n  //Executes when the current instance of current component is being deleted from memory\n  componentWillUnmount() {\n    //console.log(\"componentWillUnmount - Product\");\n  }\n}\n","import React, { Component } from \"react\";\nimport Product from \"./Product\";\n\nexport default class ShoppingCart extends Component {\n  //Executes when the component is mounted\n  constructor(props) {\n    //console.log(\"constructor - ShoppingCart\");\n    super(props); //calling super class's constructor\n\n    //initialization of the state\n    this.state = {\n      products: [],\n    };\n  }\n\n  render() {\n    //console.log(\"render - ShoppingCart\");\n\n    return (\n      <div>\n        <h4>Shopping Cart</h4>\n\n        <div className=\"row\">\n          {this.state.products.map((prod) => {\n            return (\n              <Product\n                key={prod.id}\n                product={prod}\n                onIncrement={this.handleIncrement}\n                onDecrement={this.handleDecrement}\n                onDelete={this.handleDelete}\n              >\n                <button className=\"btn btn-primary\">Buy Now</button>\n              </Product>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n  // render ends here\n\n  //Executes after constructor and render method (includes life cycle of child components, if any) of current component\n  componentDidMount = async () => {\n    //send request to server\n    var response = await fetch(\"http://192.168.0.129:5000/products\", {\n      method: \"GET\",\n    });\n\n    //the following code executes after receiving response from server\n    //converting the response body into a JS object array\n    var prods = await response.json();\n\n    //the following code executes after converting response body into JS object array\n    console.log(prods);\n\n    //updating products into component's state\n    this.setState({ products: prods });\n\n    //console.log(\"componentDidMount - ShoppingCart\");\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    /*console.log(\n      \"componentDidUpdate - ShoppingCart\",\n      prevProps,\n      prevState,\n      this.props,\n      this.state\n    );*/\n    // if (prevProps.x != this.props.x) {\n    //   //make http call\n    // }\n  }\n\n  //Executes when the current instance of current component is being deleted from memory\n  componentWillUnmount() {\n    //console.log(\"componentWillUnmount - ShoppingCart\");\n  }\n\n  componentDidCatch(error, info) {\n    //console.log(\"componentDidCatch - ShoppingCart\");\n    //console.log(error, info);\n\n    localStorage.lastError = `${error}\\n${JSON.stringify(info)}`;\n  }\n\n  //executes when the user clicks on + button.\n  handleIncrement = (product, maxValue) => {\n    //get index of selected product\n    let allProducts = [...this.state.products];\n    let index = allProducts.indexOf(product);\n\n    if (allProducts[index].quantity < maxValue) {\n      allProducts[index].quantity++;\n\n      //update the state of current component (parent component)\n      this.setState({ products: allProducts });\n    }\n  };\n\n  //executes when the user clicks on - button.\n  handleDecrement = (product, minValue) => {\n    //get index of selected product\n    let allProducts = [...this.state.products];\n    let index = allProducts.indexOf(product);\n\n    if (allProducts[index].quantity > minValue) {\n      allProducts[index].quantity--;\n\n      //update the state of current component (parent component)\n      this.setState({ products: allProducts });\n    }\n  };\n\n  //executes when the user clicks on Delete (X) button in the Product component.\n  handleDelete = (product) => {\n    //get index of selected product\n    let allProducts = [...this.state.products];\n    let index = allProducts.indexOf(product);\n\n    if (window.confirm(\"Are you sure to delete?\")) {\n      //delete product based on index\n      allProducts.splice(index, 1);\n\n      //update the state of current component (parent component)\n      this.setState({ products: allProducts });\n    }\n  };\n}\n","import React, { Component } from \"react\";\n\nexport default class NoMatchPage extends Component {\n  render() {\n    return (\n      <div>\n        <h4>Page not found</h4>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport ShoppingCart from \"./ShoppingCart\";\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NoMatchPage from \"./NoMatchPage\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route path=\"/\" exact component={ShoppingCart} />\n            {/* <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route path=\"/customers\" exact component={CustomersList} /> */}\n            {/* <Route path=\"/cart\" exact component={ShoppingCart} /> */}\n            <Route path=\"*\" component={NoMatchPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"jquery\";\nimport \"popper.js/dist/umd/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}